#!/bin/bash

# AI Chatter - Startup Script
# –ó–∞–ø—É—Å–∫ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
echo -e "${CYAN}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                      ü§ñ AI CHATTER BOT                       ‚ïë"
echo "‚ïë                    –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã                      ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
log "–ü—Ä–æ–≤–µ—Ä—è—é Docker..."
if ! command -v docker &> /dev/null; then
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
log "–ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
if [ ! -f .env ]; then
    warning "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    log "–°–æ–∑–¥–∞—é .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
    if [ -f env.example ]; then
        cp env.example .env
        echo -e "${YELLOW}‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–æ–∫–µ–Ω—ã!${NC}"
        echo -e "   - TELEGRAM_BOT_TOKEN (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
        echo -e "   - NOTION_PARENT_PAGE_ID (–¥–ª—è Notion MCP)"
        echo -e "   - GMAIL_* –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–¥–ª—è Gmail MCP)"
        echo ""
        echo -e "–ü–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
        exit 1
    else
        error "–§–∞–π–ª env.example –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é."
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ TELEGRAM_BOT_TOKEN
if ! grep -q "TELEGRAM_BOT_TOKEN=.*[^=]" .env 2>/dev/null; then
    error "TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!"
    echo -e "–î–æ–±–∞–≤—å—Ç–µ —Å—Ç—Ä–æ–∫—É: ${YELLOW}TELEGRAM_BOT_TOKEN=your_bot_token_here${NC}"
    exit 1
fi

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –∑–∞–ø—É—Å–∫–∞
MODE="full"
if [ "$1" = "basic" ]; then
    MODE="basic"
    log "–†–µ–∂–∏–º: –¢–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç (–±–µ–∑ VibeCoding –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)"
elif [ "$1" = "vibecoding" ]; then
    MODE="vibecoding"
    log "–†–µ–∂–∏–º: VibeCoding —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º"
else
    log "–†–µ–∂–∏–º: –ü–æ–ª–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (–±–æ—Ç + VibeCoding + –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å)"
fi

# –í—ã–±–æ—Ä Docker Compose —Ñ–∞–π–ª–∞
COMPOSE_FILE="docker-compose.full.yml"
if [ "$MODE" = "basic" ]; then
    COMPOSE_FILE="docker-compose.yml"
elif [ "$MODE" = "vibecoding" ]; then
    COMPOSE_FILE="docker-compose.vibecoding.yml"
fi

log "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $COMPOSE_FILE"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f $COMPOSE_FILE down --remove-orphans 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if [ "$2" = "--clean" ]; then
    warning "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö Docker –æ–±—Ä–∞–∑–æ–≤..."
    docker system prune -f
    docker-compose -f $COMPOSE_FILE build --no-cache
else
    # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
    log "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
    docker-compose -f $COMPOSE_FILE build
fi

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f $COMPOSE_FILE up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
if docker-compose -f $COMPOSE_FILE ps | grep -q "Up"; then
    success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
    
    echo ""
    echo -e "${GREEN}üéâ AI Chatter —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo ""
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
    if [ "$MODE" = "full" ] || [ "$MODE" = "vibecoding" ]; then
        echo -e "${CYAN}üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
        echo -e "   ü§ñ Telegram Bot: –ê–∫—Ç–∏–≤–µ–Ω"
        echo -e "   üåê VibeCoding API: http://localhost:8080"
        echo -e "   üé® –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:3000"
        echo ""
    elif [ "$MODE" = "basic" ]; then
        echo -e "${CYAN}üìã –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
        echo -e "   ü§ñ Telegram Bot: –ê–∫—Ç–∏–≤–µ–Ω"
        echo ""
    fi
    
    echo -e "${CYAN}üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
    echo -e "   –õ–æ–≥–∏:        ${YELLOW}docker-compose -f $COMPOSE_FILE logs -f${NC}"
    echo -e "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞:   ${YELLOW}docker-compose -f $COMPOSE_FILE down${NC}"
    echo -e "   –°—Ç–∞—Ç—É—Å:      ${YELLOW}docker-compose -f $COMPOSE_FILE ps${NC}"
    echo ""
    
else
    error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã!"
    echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:${NC}"
    echo -e "   ${YELLOW}docker-compose -f $COMPOSE_FILE logs${NC}"
    exit 1
fi

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤
if [ "$3" = "--logs" ]; then
    log "–ü–æ–∫–∞–∑—ã–≤–∞—é –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤... (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)"
    sleep 2
    docker-compose -f $COMPOSE_FILE logs -f
fi