#!/bin/bash

# AI Chatter - Startup Script
# –ó–∞–ø—É—Å–∫ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
echo -e "${CYAN}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                      ü§ñ AI CHATTER BOT                       ‚ïë"
echo "‚ïë                    –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã                      ‚ïë"
echo "‚ïë               + GitHub & RuStore –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏                   ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å help
if [ "$1" = "help" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    echo -e "${CYAN}üìñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:${NC}"
    echo -e "   ${YELLOW}./start-ai-chatter.sh${NC}              - –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ (–±–æ—Ç + VibeCoding + –≤–µ–±)"
    echo -e "   ${YELLOW}./start-ai-chatter.sh basic${NC}        - –¢–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç"
    echo -e "   ${YELLOW}./start-ai-chatter.sh vibecoding${NC}   - –ë–æ—Ç + VibeCoding"
    echo -e "   ${YELLOW}./start-ai-chatter.sh [mode] --clean${NC} - –° –æ—á–∏—Å—Ç–∫–æ–π —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤"
    echo -e "   ${YELLOW}./start-ai-chatter.sh [mode] --logs${NC}  - –° –ø–æ–∫–∞–∑–æ–º –ª–æ–≥–æ–≤"
    echo ""
    echo -e "${CYAN}üîå MCP –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:${NC}"
    echo -e "   üìã Notion - —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–º–µ—Ç–æ–∫ –∏ –ø–æ–∏—Å–∫"
    echo -e "   üìß Gmail - –∞–Ω–∞–ª–∏–∑ –ø–∏—Å–µ–º –∏ –æ–±–æ–±—â–µ–Ω–∏–µ"
    echo -e "   üì¶ GitHub - —Ä–∞–±–æ—Ç–∞ —Å —Ä–µ–ª–∏–∑–∞–º–∏ (–¥–ª—è /release_rc)"
    echo -e "   üè™ RuStore - –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π (–¥–ª—è /ai_release)"
    echo ""
    echo -e "${CYAN}‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .env:${NC}"
    echo -e "   ${YELLOW}TELEGRAM_BOT_TOKEN${NC}=...     (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
    echo -e "   ${YELLOW}GITHUB_TOKEN${NC}=...           (–¥–ª—è GitHub –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏)"
    echo -e "   ${YELLOW}RUSTORE_KEY${NC}=...            (–¥–ª—è RuStore)"
    echo -e "   ${YELLOW}GMAIL_CREDENTIALS_JSON${NC}=... (–¥–ª—è Gmail)"
    echo -e "   ${YELLOW}NOTION_TOKEN${NC}=...           (–¥–ª—è Notion)"
    echo ""
    exit 0
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
log "–ü—Ä–æ–≤–µ—Ä—è—é Docker..."
if ! command -v docker &> /dev/null; then
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
log "–ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
if [ ! -f .env ]; then
    warning "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    log "–°–æ–∑–¥–∞—é .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
    if [ -f env.example ]; then
        cp env.example .env
        echo -e "${YELLOW}‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–æ–∫–µ–Ω—ã!${NC}"
        echo -e "   - TELEGRAM_BOT_TOKEN (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
        echo -e "   - NOTION_PARENT_PAGE_ID (–¥–ª—è Notion MCP)"
        echo -e "   - GMAIL_* –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–¥–ª—è Gmail MCP)"
        echo ""
        echo -e "–ü–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
        exit 1
    else
        error "–§–∞–π–ª env.example –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é."
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ TELEGRAM_BOT_TOKEN
if ! grep -q "TELEGRAM_BOT_TOKEN=.*[^=]" .env 2>/dev/null; then
    error "TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!"
    echo -e "–î–æ–±–∞–≤—å—Ç–µ —Å—Ç—Ä–æ–∫—É: ${YELLOW}TELEGRAM_BOT_TOKEN=your_bot_token_here${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö MCP —Ç–æ–∫–µ–Ω–æ–≤
check_mcp_tokens() {
    local missing_tokens=()
    
    # GitHub Token
    if ! grep -q "GITHUB_TOKEN=.*[^=]" .env 2>/dev/null; then
        missing_tokens+=("GITHUB_TOKEN")
    fi
    
    # RuStore credentials (–Ω–æ–≤–∞—è —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å—Ö–µ–º–∞)
    if ! grep -q "RUSTORE_KEY=.*[^=]" .env 2>/dev/null; then
        missing_tokens+=("RUSTORE_KEY")
    fi
    
    # Gmail credentials
    if ! grep -q "GMAIL_CREDENTIALS_JSON.*[^=]" .env 2>/dev/null && ! grep -q "GMAIL_CREDENTIALS_JSON_PATH.*[^=]" .env 2>/dev/null; then
        missing_tokens+=("GMAIL_CREDENTIALS (JSON –∏–ª–∏ PATH)")
    fi
    
    # Notion token
    if ! grep -q "NOTION_TOKEN=.*[^=]" .env 2>/dev/null; then
        missing_tokens+=("NOTION_TOKEN")
    fi
    
    if [ ${#missing_tokens[@]} -gt 0 ]; then
        warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ MCP –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã:"
        for token in "${missing_tokens[@]}"; do
            echo -e "   ‚ö†Ô∏è  $token - —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∞"
        done
        echo ""
        echo -e "${CYAN}üí° –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env:${NC}"
        echo -e "   ${YELLOW}GITHUB_TOKEN${NC}=your_github_token_here          # –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å GitHub"
        echo -e "   ${YELLOW}RUSTORE_KEY${NC}=your_rustore_api_token         # –µ–¥–∏–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è RuStore API"
        echo -e "   ${YELLOW}GMAIL_CREDENTIALS_JSON${NC}='{...}'               # –¥–ª—è Gmail –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"
        echo -e "   ${YELLOW}NOTION_TOKEN${NC}=your_notion_token               # –¥–ª—è Notion –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"
        echo ""
    fi
}

# –í—ã–∑—ã–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É MCP —Ç–æ–∫–µ–Ω–æ–≤
check_mcp_tokens

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤
build_mcp_servers() {
    log "üîß –°–±–æ—Ä–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Go
    if ! command -v go &> /dev/null; then
        warning "Go –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. MCP —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ –±—É–¥—É—Ç —Å–æ–±—Ä–∞–Ω—ã."
        warning "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Go –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏: https://golang.org/dl/"
        return 1
    fi
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏
    if [ -f "scripts/build-mcp-servers.sh" ]; then
        ./scripts/build-mcp-servers.sh
    else
        # Fallback –∫ –ø—Ä—è–º–æ–π —Å–±–æ—Ä–∫–µ
        mkdir -p ./bin
        log "   üìã Notion MCP Server..."
        go build -o ./bin/notion-mcp-server ./cmd/notion-mcp-server/ 2>/dev/null || true
        log "   üìß Gmail MCP Server..."
        go build -o ./bin/gmail-mcp-server ./cmd/gmail-mcp-server/ 2>/dev/null || true
        log "   üì¶ GitHub MCP Server..."
        go build -o ./bin/github-mcp-server ./cmd/github-mcp-server/ 2>/dev/null || true
        log "   üè™ RuStore MCP Server..."
        go build -o ./bin/rustore-mcp-server ./cmd/rustore-mcp-server/ 2>/dev/null || true
        log "   üî• VibeCoding MCP Server..."
        go build -o ./bin/vibecoding-mcp-server ./cmd/vibecoding-mcp-server/ 2>/dev/null || true
        log "   üåê VibeCoding MCP HTTP Server..."
        go build -o ./bin/vibecoding-mcp-http-server ./cmd/vibecoding-mcp-http-server/ 2>/dev/null || true
        log "   ü§ñ AI Chatter Bot..."
        go build -o ./bin/ai-chatter-bot ./cmd/bot/ 2>/dev/null || true
        success "MCP —Å–µ—Ä–≤–µ—Ä—ã —Å–æ–±—Ä–∞–Ω—ã!"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ MCP –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
show_mcp_status() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Notion
    if grep -q "NOTION_TOKEN=.*[^=]" .env 2>/dev/null && [ -f "./bin/notion-mcp-server" ]; then
        echo -e "   üìã Notion: ${GREEN}‚úÖ –ì–æ—Ç–æ–≤${NC} (—Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–º–µ—Ç–æ–∫, –ø–æ–∏—Å–∫)"
    else
        echo -e "   üìã Notion: ${YELLOW}‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Gmail
    if (grep -q "GMAIL_CREDENTIALS_JSON.*[^=]" .env 2>/dev/null || grep -q "GMAIL_CREDENTIALS_JSON_PATH.*[^=]" .env 2>/dev/null) && [ -f "./bin/gmail-mcp-server" ]; then
        echo -e "   üìß Gmail: ${GREEN}‚úÖ –ì–æ—Ç–æ–≤${NC} (–ø–æ–∏—Å–∫ –ø–∏—Å–µ–º, –∞–Ω–∞–ª–∏–∑)"
    else
        echo -e "   üìß Gmail: ${YELLOW}‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º GitHub
    if grep -q "GITHUB_TOKEN=.*[^=]" .env 2>/dev/null && [ -f "./bin/github-mcp-server" ]; then
        echo -e "   üì¶ GitHub: ${GREEN}‚úÖ –ì–æ—Ç–æ–≤${NC} (—Ä–µ–ª–∏–∑—ã, —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ AAB)"
    else
        echo -e "   üì¶ GitHub: ${YELLOW}‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC} (–¥–ª—è /release_rc)"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º RuStore (–Ω–æ–≤–∞—è —Å—Ö–µ–º–∞ —Å RUSTORE_KEY)
    if grep -q "RUSTORE_KEY=.*[^=]" .env 2>/dev/null && [ -f "./bin/rustore-mcp-server" ]; then
        echo -e "   üè™ RuStore: ${GREEN}‚úÖ –ì–æ—Ç–æ–≤${NC} (–ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ /ai_release)"
    else
        echo -e "   üè™ RuStore: ${YELLOW}‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC} (–¥–ª—è /ai_release)"
    fi
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –∑–∞–ø—É—Å–∫–∞
MODE="full"
if [ "$1" = "basic" ]; then
    MODE="basic"
    log "–†–µ–∂–∏–º: –¢–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç (–±–µ–∑ VibeCoding –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)"
elif [ "$1" = "vibecoding" ]; then
    MODE="vibecoding"
    log "–†–µ–∂–∏–º: VibeCoding —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º"
else
    log "–†–µ–∂–∏–º: –ü–æ–ª–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (–±–æ—Ç + VibeCoding + –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å)"
fi

# –í—ã–±–æ—Ä Docker Compose —Ñ–∞–π–ª–∞
COMPOSE_FILE="docker-compose.full.yml"
if [ "$MODE" = "basic" ]; then
    COMPOSE_FILE="docker-compose.yml"
elif [ "$MODE" = "vibecoding" ]; then
    COMPOSE_FILE="docker-compose.vibecoding.yml"
fi

log "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $COMPOSE_FILE"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f $COMPOSE_FILE down --remove-orphans 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if [ "$2" = "--clean" ]; then
    warning "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö Docker –æ–±—Ä–∞–∑–æ–≤..."
    docker system prune -f
    docker-compose -f $COMPOSE_FILE build --no-cache
    
    # –°–±–æ—Ä–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å –æ—á–∏—Å—Ç–∫–æ–π
    log "–°–±–æ—Ä–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å –æ—á–∏—Å—Ç–∫–æ–π..."
    rm -rf ./bin
    build_mcp_servers
else
    # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
    log "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
    docker-compose -f $COMPOSE_FILE build
    
    # –°–±–æ—Ä–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤
    log "–°–±–æ—Ä–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤..."
    build_mcp_servers
fi

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f $COMPOSE_FILE up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
if docker-compose -f $COMPOSE_FILE ps | grep -q "Up"; then
    success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
    
    echo ""
    echo -e "${GREEN}üéâ AI Chatter —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo ""
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
    if [ "$MODE" = "full" ] || [ "$MODE" = "vibecoding" ]; then
        echo -e "${CYAN}üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
        echo -e "   ü§ñ Telegram Bot: –ê–∫—Ç–∏–≤–µ–Ω"
        echo -e "   üåê VibeCoding API: http://localhost:8080"
        echo -e "   üé® –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:3000"
        echo ""
        echo -e "${CYAN}üîå MCP –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:${NC}"
        show_mcp_status
        echo ""
    elif [ "$MODE" = "basic" ]; then
        echo -e "${CYAN}üìã –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
        echo -e "   ü§ñ Telegram Bot: –ê–∫—Ç–∏–≤–µ–Ω"
        echo ""
        echo -e "${CYAN}üîå MCP –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:${NC}"
        show_mcp_status
        echo ""
    fi
    
    echo -e "${CYAN}üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
    echo -e "   –õ–æ–≥–∏:        ${YELLOW}docker-compose -f $COMPOSE_FILE logs -f${NC}"
    echo -e "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞:   ${YELLOW}docker-compose -f $COMPOSE_FILE down${NC}"
    echo -e "   –°—Ç–∞—Ç—É—Å:      ${YELLOW}docker-compose -f $COMPOSE_FILE ps${NC}"
    echo -e "   –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞:  ${YELLOW}./start-ai-chatter.sh --clean${NC}"
    echo -e "   MCP –°–µ—Ä–≤–µ—Ä—ã: ${YELLOW}./scripts/build-mcp-servers.sh${NC}"
    echo ""
    
    echo -e "${CYAN}ü§ñ –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:${NC}"
    echo -e "   üì¶ ${YELLOW}/release_rc${NC}     - –ü—É–±–ª–∏–∫–∞—Ü–∏—è Release Candidate –≤ RuStore"
    echo -e "   üìß ${YELLOW}/gmail_summary${NC}  - –ê–Ω–∞–ª–∏–∑ –∏ –æ–±–æ–±—â–µ–Ω–∏–µ –ø–∏—Å–µ–º Gmail"
    echo -e "   üìã ${YELLOW}/notion_save${NC}    - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Notion"
    echo -e "   üìã ${YELLOW}/notion_search${NC}  - –ü–æ–∏—Å–∫ –≤ Notion"
    echo ""
    
else
    error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã!"
    echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:${NC}"
    echo -e "   ${YELLOW}docker-compose -f $COMPOSE_FILE logs${NC}"
    exit 1
fi

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤
if [ "$3" = "--logs" ]; then
    log "–ü–æ–∫–∞–∑—ã–≤–∞—é –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤... (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)"
    sleep 2
    docker-compose -f $COMPOSE_FILE logs -f
fi